{"version":3,"sources":["components/Data/Data.js","components/Landing/Landing.js","App.js","reportWebVitals.js","index.js"],"names":["Data","props","useState","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","console","log","filteredItems","filter","cur","country","toLowerCase","includes","term","func","Table","striped","bordered","hover","responsive","map","index","className","cases","deaths","todayCases","todayDeaths","recovered","active","critical","Landing","location","setLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","features","place_name","Jumbotron","Container","Row","Col","sm","App","searchValue","setSearchValue","Navbar","bg","variant","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","FormControl","type","placeholder","md","onChange","Event","target","value","it","Accordion","defaultActiveKey","Card","as","Header","eventKey","Body","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86a6a379.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { Table } from 'react-bootstrap';\r\nfunction Data(props) {\r\n      const [isLoaded, setIsLoaded] = useState(false);\r\n      const [items, setItems] = useState([]);\r\n\r\n      useEffect(() => {\r\n            fetch(\"https://coronavirus-19-api.herokuapp.com/countries\")\r\n                  .then(res => res.json())\r\n                  .then(\r\n                        (result) => {\r\n                              console.log(\"done\")\r\n                              setIsLoaded(true);\r\n                              setItems(result);\r\n                        },\r\n                  )\r\n      }, [])\r\n      const filteredItems = items.filter((cur) => {\r\n            return (cur.country.toLowerCase().includes(props.term.toLowerCase()))\r\n      })\r\n      props.func(items)\r\n      return (\r\n            <Table striped bordered hover responsive>\r\n                  {/* Headers */}\r\n                  <thead>\r\n                        <tr>\r\n                              <th>Country</th>\r\n                              <th>Cases</th>\r\n                              <th>Deaths</th>\r\n                              <th>New Cases</th>\r\n                              <th>New Deaths</th>\r\n                              <th>Recovered</th>\r\n                              <th>Active</th>\r\n                              <th>Critical</th>\r\n                        </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                        {(!isLoaded) && <p>Loading...</p>}\r\n                        {\r\n                              filteredItems.map((cur, index) => {\r\n                                    return (\r\n                                          <tr className=\"Data-Elem\" key={index}>\r\n                                                <td className=\"country\">{cur.country}</td>\r\n                                                <td className=\"cases\"> {cur.cases}</td>\r\n                                                <td className=\"deaths text-danger\">{cur.deaths}</td>\r\n                                                <td className=\"todayCases\">{cur.todayCases}</td>\r\n                                                <td className=\"todayDeaths text-danger\" >{cur.todayDeaths}</td>\r\n                                                <td className=\"recovered text-success\">{cur.recovered}</td>\r\n                                                <td className=\"active\">{cur.active}</td>\r\n                                                <td className=\"critical text-danger\">{cur.critical}</td>\r\n                                          </tr>\r\n                                    )\r\n                              })\r\n                        }\r\n                  </tbody>\r\n            </Table>\r\n      );\r\n}\r\n\r\nexport default Data\r\n","import React, { useEffect , useState } from 'react'\r\nimport { Container, Row, Col, Jumbotron } from 'react-bootstrap'\r\nfunction Landing() {\r\n    const [location, setLocation] = useState(\"\")\r\n    useEffect(()=>{\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(function (position) {\r\n    \r\n                // Get the coordinates of the current position.\r\n                var lat = position.coords.latitude;\r\n                var lng = position.coords.longitude;\r\n                console.log(lat,lng);\r\n            });\r\n            \r\n        }\r\n        else {\r\n            console.log(\"No Location\")\r\n            var lat = 0;\r\n            var lng = 0;\r\n        }\r\n        console.log(lat,lng)\r\n        console.log(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\"+ lng + \",\" + lat + \".json?&access_token=pk.eyJ1IjoibG9oaXQyNDQiLCJhIjoiY2twNWZoZ3MzMHU4YjJ4cjJkcWhvZWZvNiJ9.qrQoAp1hwFBvf98GYdvh1Q\")\r\n        fetch(\"https://api.mapbox.com/geocoding/v5/mapbox.places/\"+ lng + \",\" + lat + \".json?&access_token=pk.eyJ1IjoibG9oaXQyNDQiLCJhIjoiY2twNWZoZ3MzMHU4YjJ4cjJkcWhvZWZvNiJ9.qrQoAp1hwFBvf98GYdvh1Q\")\r\n                  .then(res => res.json())\r\n                  .then(\r\n                        (result) => {\r\n                              setLocation(result.features[0].place_name)\r\n                        },\r\n                  )\r\n    },[])\r\n    return (\r\n        <Jumbotron>\r\n        <Container>\r\n            <Row>\r\n                <Col sm={6}>\r\n                    <h1> Your Country </h1>\r\n                    {location}\r\n                    {/* data - \r\n                    <br></br>active\r\n                    <br></br>total\r\n                    <br></br>deaths\r\n                    <br></br>new cases\r\n                    <br></br>new deaths\r\n                    <br></br>critical */}\r\n                    </Col>\r\n                <Col sm={6}>\r\n                    <h1>World </h1>\r\n                    <br></br>data - \r\n                    <br></br>active\r\n                    <br></br>total\r\n                    <br></br>deaths\r\n                    <br></br>new cases\r\n                    <br></br>new deaths\r\n                    <br></br>critical\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </Jumbotron>\r\n    )\r\n}\r\nexport default Landing","import React, { useState } from 'react'\nimport './App.css';\nimport Data from './components/Data/Data'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, FormControl, Accordion, Card, Nav } from \"react-bootstrap\"\nimport Landing from './components/Landing/Landing';\nfunction App() {\n  const [searchValue, setSearchValue] = useState(\"\")\n  const [items, setItems] = useState([]);\n  return (\n    <div className=\"App\">\n      {/* Navbar */}\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n        <Navbar.Brand href=\"#home\">Covid Tracker</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#table\" variant=\"dark\">World Data</Nav.Link>\n          </Nav>\n          <FormControl type=\"search\" placeholder=\"Search\" md=\"4\" className=\"w-50\" onChange={(Event) => {\n            setSearchValue(Event.target.value);\n          }} value={searchValue} />\n        </Navbar.Collapse>\n      </Navbar>\n      {/* Home */}\n      <Landing it={items}/>\n      {/* Table  Accordian*/}\n      <Accordion className=\"text-center\" defaultActiveKey=\"0\">\n        <Card id=\"table\">\n          <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n            World Data\n    </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <Data term={searchValue} func = {setItems} />\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}